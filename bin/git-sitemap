#!/bin/bash

# Escape for xml.
function escapexml() {
  cat - | sed "s/\&/\&amp;/g; s/</\&lt;/g; s/>/\&gt;/g; s/\"/\&quot;/g; s/'/\&apos;/g"
}

# Convert to W3C DateTime format.
function w3cdatetime() {
  ${date} "+%Y-%m-%dT%H:%M:%S%:z" -d "$(cat -)"
}

# Register <url>.
function register_url() {
  local root
  root=$(git rev-parse --show-toplevel)
  local path="${root}/$1"

  # Set the default settings.
  local PREFIX="https://example.com" # url prefix
  local SINCE=1                      # the since date of commit log
  local CURRENT_TIME="now"           # the reference time to calculate the update frequency
  function difftest() { # update judgement
    # $1 the hash of commit
    # $2 file path
    return 0 # 無条件で「更新」判定
  }
  function loc() { # loc filter
    cat - # pass through
  }
  function lastmod() { # lastmod filter
    # $1 file path
    cat - # pass through
  }
  function changefreq() { # changefreq filter
    # $1 file path
    cat - # pass through
  }
  function priority() { # set priority value
    # $1 file path
    echo "" # omit
  }

  # Generate the pathes of the setting files.
  local rcdirs=()
  local rcdir
  rcdir=$(dirname "${path}")
  while [ ${#rcdir} -ge ${#root} ]; do
    rcdirs=("${rcdir}"/.git-sitemaprc.sh "${rcdirs[@]}")
    rcdir=$(cd "${rcdir}/.." && pwd)
  done

  # Load settings.
  for rcpath in "${rcdirs[@]}"; do
    if [ -f "${rcpath}" ]; then
      # shellcheck source=/dev/null
      source "${rcpath}"
    fi
  done

  # Generate <loc>.
  local loc
  loc="$(echo "${PREFIX}/$1" | loc)"
  if [ -z "${loc}" ]; then
    return 1
  fi

  # Generate <lastmod>.
  local lastmod
  lastmod=$(git log -1 --date=iso --pretty=format:"%ad" "${path}" | w3cdatetime | lastmod "${path}")

  # Count update.
  local count=0
  local first
  first="$(git log --date=iso --pretty=%H "${path}" | tail -n 1)"
  local hashes=($(git log --reverse --pretty=%H --since "${SINCE}" "${path}"))
  for hash in "${hashes[@]}"; do
    if [ "${hash}" == "${first}" ]; then
      count=$((count + 1))
    else
      if difftest "${hash}" "${path}"; then
        count=$((count + 1))
      fi
    fi
  done

  # Generate <changefreq>.
  local changefreq="yearly"
  if [ ${count} -ne 0 ]; then
    local created
    created=$(git log --date=iso --pretty=format:"%ad" --since "${SINCE}" "${path}" | tail -n 1)
    local elapsed=$((($(${date} "+%s" -d "${CURRENT_TIME}") - $(${date} "+%s" -d "${created}")) / count))

    if [ ${elapsed} -le $((60 * 60)) ]; then
      changefreq="hourly"
    elif [ ${elapsed} -le $((60 * 60 * 24)) ]; then
      changefreq="daily"
    elif [ ${elapsed} -le $((60 * 60 * 24 * 7)) ]; then
      changefreq="weekly"
    elif [ ${elapsed} -le $((60 * 60 * 24 * 28)) ]; then
      changefreq="monthly"
    else
      changefreq="yearly"
    fi
  fi
  changefreq=$(echo "${changefreq}" | changefreq "${path}")

  # Generate <priority>.
  local priority
  priority=$(priority "${path}")

  # Register <url>.
  echo "  <url>"
  echo "    <loc>$(echo "${loc}" | escapexml)</loc>"
  if [ -n "${lastmod}" ]; then
    echo "    <lastmod>$(echo "${lastmod}" | escapexml)</lastmod>"
  fi
  if [ -n "${changefreq}" ]; then
    echo "    <changefreq>$(echo "${changefreq}" | escapexml)</changefreq>"
  fi
  if [ -n "${priority}" ]; then
    echo "    <priority>$(echo "${priority}" | escapexml)</priority>"
  fi
  echo "  </url>"

  return 0
}

# Detect GNU date command.
date="gdate"
if man date | grep "GNU coreutils" >/dev/null; then
  date="date"
fi
if ! ${date} >/dev/null; then
  echo "Please install GNU coreutils. " 2>&1
  exit $?
fi

echo '<?xml version="1.0" encoding="UTF-8"?>'
echo '<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">'
files=$(git ls-files --full-name)
for file in $files; do
  register_url "${file}"
done
echo "</urlset>"
